VITA: SIMPLE KEY EXCHANGE (vita-ske, version 4)

 A simple key negotiation protocol based on Noise NNpsk0 (authenticated via
 pre-shared symmetric keys) that provides authentication, perfect forward
 secrecy, and is immune to replay attacks.

Primitives:

 • The underlying Noise instance is: Noise_NNpsk0_25519_AESGCM_BLAKE2s
 • HKDF: hkdf-blake2s, hkdf from crypto.lua
   (input key material is 256‑bits, output is adjustable)
 • AES-GCM: aes256-gcm from lib/ipsec/aes_gcm_avx.dasl
   (key is 256‑bits, block size is 128‑bits)
 • DH: curve25519, sandy2x
   (keys are 256‑bits, output is 256‑bits)
 • HASH: blake2s, official SSE implementation
   (output is up to 256‑bits) 

Notational Conventions:

 → m
  Denotes that we receive the message m.

 ← m
  Denotes that we send the message m.

 a ‖ b
  Denotes a concatenated with b.

 P (x)
  Denotes the Noise message pattern P with x as its payload.

Description:

 Let k be a pre-shared symmetric key of 32 bytes. Let r be the
 “Security Parameter Index” (SPI) for the parent “Security Association” (SA),
 i.e. the route.

 Two parties participate in the protocol: an initiator and a responder.

 Let vi and vr be four byte version identifiers choosen by the initiator and
 the responder respectively. Let aead be a 32 byte identifer for an AEAD
 algorithm chosen by the responder. Let n be a 32 byte random nonce chosen by
 the responder.

 ----

 The initiator behaves as follows:

  ← vi
  → vr ‖ aead ‖ n

 Ensure vr and aead are acceptable. Initialize NNpsk0 with k, and
 prologue = vr ‖ r ‖ aead ‖ n. Let rxspi be a SPI choosen by us. Let txspi be a
 SPI choosen by the responder.

  ← psk, e (rxspi)
  → e, ee (txspi)

 Ensure that the response is valid. Split the Noise CipherState into cs1 and
 cs2. Assign (rxspi, cs1) to the inbound SA, and (txspi, cs2) to the outbound
 SA.

 Discard all protocol state.

 ----

 The responder behaves as follows: Initialize NNpsk0 with k, and
 prologue = vr ‖ r ‖ aead ‖ n.

  → vi
  ← vr ‖ aead ‖ n

 This initial exchange must not effect state, and may be repeated an arbitrary
 number of times.

 Let txspi be a SPI choosen by the responder.

  → psk, e (txspi)

 Ensure that the response is valid. Let rxspi be a SPI choosen by us.

  ← e, ee (rxspi)

 Split the Noise CipherState into cs1 and cs2. Assign (rxspi, cs2) to the
 inbound SA, and (txspi, cs1) to the outbound SA.

 Discard all protocol state.

Security Proof:

 We rely on the proven properties of the Noise protocol framework. In addition
 we assume that the nonce n has enough entropy so that the probability that an
 identical prologue has occurred before is negligible, rendering the protocol
 immune to message replay.

Notes:

 • The AD is hashed to 16 bytes with blake2s before being supplied to
   aes256-gcm. This is due to a limitation of the maximum AD length of our
   aes-gcm implementation.

 • The vi value is transmitted solely for informational purposes and has no
   effect on the protocol. The responder MUST NOT consider it to, i.e.,
   downgrade vr or select an aead value.

References:

 • The Noise protocol framework:
   http://noiseprotocol.org/noise.html

 • HKDF: HMAC-based Extract-and-Expand Key Derivation Function (RFC 5869):
   https://tools.ietf.org/html/rfc5869

 • HMAC: Keyed-Hashing for Message Authentication (RFC 2104):
   https://tools.ietf.org/html/rfc2104

 • BLAKE2:
   https://blake2.net/

 • Curve25519:
   https://cr.yp.to/ecdh.html

 • Sandy2x:
   https://www.win.tue.nl/~tchou/sandy2x/

 • Security Architecture for the Internet Protocol:
   https://tools.ietf.org/html/rfc4301

 • The use of AES-GCM in IPsec ESP:
   https://tools.ietf.org/html/rfc4106
